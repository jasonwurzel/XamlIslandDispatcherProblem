<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <LangVersion>preview</LangVersion>
    <UseWPF>true</UseWPF>
    <RuntimeIdentifiers>win-x64</RuntimeIdentifiers>
    <Platforms>x64</Platforms>
    <StartupObject>ControlPlaygroundXamlIsland.Program</StartupObject>
  </PropertyGroup>

  <!-- Always determine a runtime to make things (paths) deterministic -->
  <PropertyGroup Condition="'$(RuntimeIdentifier)' == ''">
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
  </PropertyGroup>

  <PropertyGroup>
    <IslandLibrary>ControlPlaygroundUwpLib</IslandLibrary>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Toolkit.Wpf.UI.XamlHost" Version="6.0.0-preview5" />
  </ItemGroup>

  <PropertyGroup>
    <IslandPath Condition="$(IslandPath) == ''">..\$(IslandLibrary)</IslandPath>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="@(IslandLibraryCompile)">
      <Link>$(IslandLibrary)\%(RecursiveDir)%(Filename)%(Extension)</Link>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <IslandLibraryContent Include="$(IslandPath)\**\*.*" Exclude="$(IslandPath)\**\*.user;$(IslandPath)\**\*.csproj;$(IslandPath)\**\*.cs;$(IslandPath)\**\*.xaml;$(IslandPath)\**\obj\**;$(IslandPath)\**\bin\**" />
    <IslandLibraryContent Include="$(IslandPath)\obj\x64\$(Configuration)\**\*.xbf" />
    <IslandLibraryContent Include="$(IslandPath)\obj\x64\$(Configuration)\$(IslandLibrary).xr.xml" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="$(IslandPath)\$(IslandLibrary).csproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <Reference Include="$(IslandLibrary)">
      <HintPath>$(IslandPath)\obj\x64\$(Configuration)\$(IslandLibrary).dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>

    <!-- VC++ Runtime -->
    <PackageReference Include="Microsoft.VCRTForwarders.140" Version="1.0.0-rc" />

    <!-- PackageReference for packages without a dedicated UAP lib (no TFM uap... but netstandard) or packages that alrady handle XAML islands with TFM netcoreapp -->
    <!-- Assembly references when package doesn't work (selects wrong TFM) -->

    <Reference Include="ReactiveUI.Events">
      <HintPath>$(NuGetPackageRoot)reactiveui.events\9.13.1\lib\uap10.0.16299\ReactiveUI.Events.dll</HintPath>
    </Reference>

    <Reference Include="Microsoft.Toolkit.Uwp">
      <HintPath>$(NuGetPackageRoot)Microsoft.Toolkit.Uwp\5.1.1\lib\uap10.0.16299\Microsoft.Toolkit.Uwp.dll</HintPath>
    </Reference>

    <Reference Include="Microsoft.Toolkit.Uwp.UI">
      <HintPath>$(NuGetPackageRoot)Microsoft.Toolkit.Uwp.UI\5.1.1\lib\uap10.0.16299\Microsoft.Toolkit.Uwp.UI.dll</HintPath>
    </Reference>

    <Reference Include="Microsoft.Toolkit.Uwp.UI.Animations">
      <HintPath>$(NuGetPackageRoot)Microsoft.Toolkit.Uwp.UI.Animations\5.1.1\lib\uap10.0.16299\Microsoft.Toolkit.Uwp.UI.Animations.dll</HintPath>
    </Reference>

    <Reference Include="Microsoft.Toolkit.Uwp.UI.Controls">
      <HintPath>$(NuGetPackageRoot)Microsoft.Toolkit.Uwp.UI.Controls\5.1.1\lib\uap10.0.16299\Microsoft.Toolkit.Uwp.UI.Controls.dll</HintPath>
    </Reference>

    <Reference Include="Microsoft.UI.Xaml">
      <HintPath>$(NuGetPackageRoot)microsoft.ui.xaml\2.1.190218001-prerelease\lib\uap10.0\Microsoft.UI.Xaml.winmd</HintPath>
      <Implementation>Microsoft.UI.Xaml.dll</Implementation>
    </Reference>
    <ReferenceCopyLocalPaths Include="$(NuGetPackageRoot)microsoft.ui.xaml\2.1.190218001-prerelease\runtimes\win10-x64\native\Microsoft.UI.Xaml.dll" />

    <!-- XAML assets that need to be copied -->
    <PackagesContent Include="$(NuGetPackageRoot)Microsoft.Toolkit.Uwp.UI.Controls\5.1.1\lib\uap10.0.16299\**\*.xaml" />
    <PackagesContent Include="$(NuGetPackageRoot)Microsoft.Toolkit.Uwp.UI.Controls\5.1.1\lib\uap10.0.16299\**\*.xbf" />
    <PackagesContent Include="$(NuGetPackageRoot)Microsoft.Toolkit.Uwp.UI.Controls\5.1.1\lib\uap10.0.16299\**\*.xr.xml" />
    <PackagesContent Include="$(NuGetPackageRoot)Microsoft.UI.Xaml\2.1.190218001-prerelease\lib\uap10.0\**\*.xaml" />
    <PackagesContent Include="$(NuGetPackageRoot)Microsoft.UI.Xaml\2.1.190218001-prerelease\lib\uap10.0\**\*.xbf" />
    <PackagesContent Include="$(NuGetPackageRoot)Microsoft.UI.Xaml\2.1.190218001-prerelease\lib\uap10.0\**\*.xr.xml" />

  </ItemGroup>

  <!-- 
  Special treatment of package references of Magrathea.Core. There they come in with TFM netstandard 
  and get resolved here for TFM netcoreapp.
  Change these references to the UAP assembly after the packages are resolved.
  -->
  <ItemGroup>
    <TweakNuGetPackageId Include="System.Reactive" />
    <TweakNuGetPackageId Include="ReactiveUI" />
  </ItemGroup>

  <Target Name="TweakNuGetPackageReferences" AfterTargets="ResolvePackageAssets">
    <PropertyGroup>
      <TweakNuGetPackageIds>@(TweakNuGetPackageId)</TweakNuGetPackageIds>
    </PropertyGroup>

    <ItemGroup>
      <!-- RuntimeCopyLocalItems -->
      <_RuntimeCopyLocalItems Include="@(RuntimeCopyLocalItems)" Condition="$([System.String]::new('$(TweakNuGetPackageIds)').Contains('%(RuntimeCopyLocalItems.NuGetPackageId)'))" />
      <RuntimeCopyLocalItems Remove="@(_RuntimeCopyLocalItems)" />
      <RuntimeCopyLocalItems Include="@(_RuntimeCopyLocalItems->'%(RootDir)%(Directory)..\uap10.0.16299\%(Filename)%(Extension)')" />
      <!-- ResolvedCompileFileDefinitions -->
      <_ResolvedCompileFileDefinitions Include="@(ResolvedCompileFileDefinitions)" Condition="$([System.String]::new('$(TweakNuGetPackageIds)').Contains('%(ResolvedCompileFileDefinitions.NuGetPackageId)'))" />
      <ResolvedCompileFileDefinitions Remove="@(_ResolvedCompileFileDefinitions)" />
      <ResolvedCompileFileDefinitions Include="@(_ResolvedCompileFileDefinitions->'%(RootDir)%(Directory)..\uap10.0.16299\%(Filename)%(Extension)')">
        <HintPath>%(RootDir)%(Directory)..\uap10.0.16299\%(Filename)%(Extension)</HintPath>
      </ResolvedCompileFileDefinitions>

      <!-- System.Reactive 4.2.0 -->
      <_Reference Include="@(Reference)" Condition="$([System.String]::new('%(Reference.Identity)').EndsWith('System.Reactive.dll', System.StringComparison.OrdinalIgnoreCase))" />
      <Reference Remove="@(_Reference)" />
      <Reference Include="@(_Reference->'%(RootDir)%(Directory)..\..\lib\uap10.0.16299\%(Filename)%(Extension)')" />
    </ItemGroup>

  </Target>

  <ItemGroup>
    <None Include="@(IslandLibraryContent)">
      <Link>$(IslandLibrary)\%(RecursiveDir)\%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="@(PackagesContent)">
      <Link>%(RecursiveDir)\%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <!-- WOKAROUND: .deps.json gets not published 
                https://developercommunity.visualstudio.com/content/problem/462646/referencing-native-winrt-component-in-net-core-wpf.html -->
  <PropertyGroup>
    <DesktopBridgePublishItemsOutputGroupDependsOn>
      $(DesktopBridgePublishItemsOutputGroupDependsOn);
      __IncludeProjectDepsFile
    </DesktopBridgePublishItemsOutputGroupDependsOn>
    <ApplicationManifest>app1.manifest</ApplicationManifest>
  </PropertyGroup>
  <Target Name="__IncludeProjectDepsFile">
    <ItemGroup>
      <ResolvedFileToPublish Include="$(ProjectDepsFilePath)">
        <RelativePath>$(ProjectDepsFileName)</RelativePath>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
